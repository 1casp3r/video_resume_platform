import os
import requests
from dotenv import load_dotenv
import whisper 

load_dotenv()

# Comet API (–¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞)
DOC_COMET_API_KEY = os.getenv("DOC_COMET_API_KEY")
DOC_COMET_API_URL = os.getenv("DOC_COMET_API_URL")

HEADERS = {
    "Authorization": f"Bearer {DOC_COMET_API_KEY}",
    "Content-Type": "application/json",
}

# üîç –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∑—é–º–µ —á–µ—Ä–µ–∑ Comet
def analyze_text_resume(text: str) -> str:
    data = {
        "model": "gpt-4o-mini",
        "messages": [
            {"role": "system", "content": "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –æ—Ü–µ–Ω–∫–µ —Ä–µ–∑—é–º–µ. –û—Ü–µ–Ω–∏ —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ –∏ –¥–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏."},
            {"role": "user", "content": text},
        ],
        "temperature": 0.3,
        "max_tokens": 1500,
    }

    response = requests.post(DOC_COMET_API_URL, headers=HEADERS, json=data)
    if response.status_code != 200:
        return f"–û—à–∏–±–∫–∞: {response.status_code}"

    try:
        return response.json()["choices"][0]["message"]["content"]
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞: {e}"

# üé• –ê–Ω–∞–ª–∏–∑ –≤–∏–¥–µ–æ-—Ä–µ–∑—é–º–µ —á–µ—Ä–µ–∑ Whisper + Comet
def analyze_video_resume(video_path: str) -> str:
    try:
        model = whisper.load_model("base")  # –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ "small" –∏–ª–∏ "medium"
        result = model.transcribe(video_path)
        transcript_text = result["text"]

        return analyze_text_resume(transcript_text)

    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ: {str(e)}"
